import os
import re
import sys
from itertools import dropwhile, takewhile


def top_level_file():
    main_path = os.path.realpath(sys.modules["__main__"].__file__)
    this_directory = os.path.dirname(os.path.realpath(__file__))

    return os.path.relpath(main_path, this_directory).replace("\\", "/")


def preamble():
    return f"// This file was generated by {top_level_file()}\n\n"


def snake_case(string):
    return re.sub("[^0-9a-zA-Z]", " ", string).lower().replace(" ", "_")


def macro_case(string):
    return re.sub("[^0-9a-zA-Z]", " ", string).upper().replace(" ", "_")


def camel_case(string, upper=False):
    result = ""

    for word in re.sub("[^0-9a-zA-Z]", " ", string).split():
        if (not upper) and (result == ""):
            result += word.lower()
        elif len(word) == 2 and word == word.upper():  # if two letter acronym
            result += word
        else:
            result += word.lower().capitalize()

    return result


def pascal_case(string):
    return camel_case(string, True)


def title_case(string):
    result = ""

    for word in string.split():
        result += word[0].upper() + word[1:] + " "

    return result[:-1]


def insert(file_path, code, id):
    with open(file_path) as file:
        lines = file.readlines()

    start_key = f"// Start of code block #{id} generated by {top_level_file()}\n"
    end_key = f"// End of code block #{id} generated by {top_level_file()}\n"

    if all([start_key not in l for l in lines]):
        raise Exception(f"Error: Cannot find {start_key.strip()} in {file_path}")

    if all([end_key not in l for l in lines]):
        raise Exception(f"Error: Cannot find {end_key.strip()} in {file_path}")

    lines_before_start = list(takewhile(lambda l: not l.lstrip().startswith(start_key), lines))

    lines_before_start.append(next(l for l in lines if start_key in l))

    lines_after_end = list(dropwhile(lambda l: not l.lstrip().startswith(end_key), lines))

    with open(file_path, "w") as file:
        for line in lines_before_start:
            file.write(line)

        file.write(code)

        for line in lines_after_end:
            file.write(line)
